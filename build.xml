<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2010 KUBO Atsuhiro <kubo@iteman.jp>,
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

     * Redistributions of source code must retain the above copyright
       notice, this list of conditions and the following disclaimer.
     * Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimer in the
       documentation and/or other materials provided with the distribution.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.
-->
<project name="Stagehand_AccessControl" basedir="." default="build">
  <taskdef classname="phing.tasks.ext.d51PearPkg2Task" name="d51pearpkg2"/>

  <property name="package.notes"><![CDATA[This is the first stable release of Stagehand_AccessControl.

The features of Stagehand_AccessControl 1.0.0 is the same as Stagehand_AccessControl 0.1.0 except the version number and the directory structure. As of this version, the sources are located directly under the "php_dir" (PEAR directory).]]></property>
  <property name="package.releaseversion">1.0.0</property>
  <property name="package.releasestability">stable</property>
  <property name="package.apiversion">0.1.0</property>
  <property name="package.apistability">stable</property>
  <property name="package.name">${phing.project.name}</property>
  <property name="package.summary">An access control object</property>
  <property name="package.description"><![CDATA[Stagehand_AccessControl provides an object for access control. You can specify rules to allow access and deny access, evaluate the target such like the following:

 $denyAllow = Stagehand_AccessControl::denyAllow();
 $denyAllow->deny('^192\.168\.0\.1$');
 if ($denyAllow->evaluate('192.168.0.1') == Stagehand_AccessControl_AccessState::ALLOW) {
     // access granted
     ...
 } else {
     // access denied
     ...
 }

The evaluation process works like access control by the Order directive of Apache. Stagehand_AccessControl::denyAllow() creates an object corresponding to Deny,Allow of Apache, and Stagehand_AccessControl::allowDeny() creates an object corresponding to Allow,Deny.

Since the evaluation is done by a matcher, the evaluation logic can be changed by replacing the matcher with another. The default is RegexMatcher which matches by regular expressions.]]></property>
  <property name="package.license.name">New BSD License</property>
  <property name="package.license.uri">http://www.opensource.org/licenses/bsd-license.php</property>
  <property name="package.channel">pear.piece-framework.com</property>
  <property name="package.phpdep">5.0.0</property>
  <property name="package.pearinstallerdep">1.4.3</property>
  <property name="package.packagefile">package.xml</property>

  <property name="doc.dir" value="doc"/>
  <property name="src.dir" value="src"/>

  <property name="build.dir" value="build"/>
  <property name="dist.dir" value="dist"/>

  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <copy file="${package.packagefile}" todir="${build.dir}"/>
    <copy todir="${build.dir}/${doc.dir}">
      <fileset dir="${doc.dir}"/>
    </copy>
    <copy todir="${build.dir}">
      <fileset dir="${src.dir}"/>
      <filterchain>
        <replacetokens begintoken="@" endtoken="@">
          <token key="package_version" value="${package.releaseversion}"/>
        </replacetokens>
      </filterchain>
    </copy>
  </target>

  <target name="build" depends="prepare">
    <d51pearpkg2 dir="${build.dir}" baseinstalldir="/">
      <name>${package.name}</name>
      <summary>${package.summary}</summary>
      <channel>${package.channel}</channel>
      <description>${package.description}</description>
      <notes>${package.notes}</notes>
      <license uri="${package.license.uri}">${package.license.name}</license>
      <version release="${package.releaseversion}" api="${package.apiversion}"/>
      <stability release="${package.releasestability}" api="${package.apistability}"/>
      <lead user="iteman" name="KUBO Atsuhiro" email="kubo@iteman.jp"/>
      <dirroles key="doc" value="doc"/>
      <dirroles key="Stagehand" value="php"/>
      <dependencies>
        <package type="required" name="Stagehand_Autoload" channel="${package.channel}" minimum_version="0.3.0"/>
        <extension type="required" name="pcre"/>
        <php minimum_version="${package.phpdep}"/>
        <pear minimum_version="${package.pearinstallerdep}"/>
      </dependencies>
    </d51pearpkg2>
  </target>

  <target name="dist" depends="build">
    <mkdir dir="${dist.dir}/${package.name}-${package.releaseversion}/${package.name}-${package.releaseversion}"/>
    <copy todir="${dist.dir}/${package.name}-${package.releaseversion}/${package.name}-${package.releaseversion}">
      <fileset dir="${build.dir}">
        <exclude name="${package.packagefile}"/>
      </fileset>
    </copy>
    <copy file="${build.dir}/${package.packagefile}" todir="${dist.dir}/${package.name}-${package.releaseversion}"/>
    <delete file="${dist.dir}/${package.name}-${package.releaseversion}.tgz"/>
    <tar compression="gzip" destfile="${dist.dir}/${package.name}-${package.releaseversion}.tgz" basedir="${dist.dir}/${package.name}-${package.releaseversion}"/>
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
  </target>
</project>
